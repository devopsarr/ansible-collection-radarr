---
- name: Create notification
  devopsarr.radarr.radarr_notification:
    name: Example
    config_contract: CustomScriptSettings
    implementation: CustomScript
    fields:
      - name: path
        value: /scripts/test.sh
    radarr_api_key: "{{ radarr_api_key }}"
    radarr_url: "{{ radarr_url }}"
  register: result
- name: Assert notification creation
  ansible.builtin.assert:
    that:
      - result['implementation'] == 'CustomScript'
# ----------------------------------------------------------------------------
- name: Edit already present notification
  devopsarr.radarr.radarr_notification:
    name: Example
    on_grab: true
    config_contract: CustomScriptSettings
    implementation: CustomScript
    fields:
      - name: path
        value: /scripts/test.sh
    radarr_api_key: "{{ radarr_api_key }}"
    radarr_url: "{{ radarr_url }}"
  register: result
- name: Assert notification changes
  ansible.builtin.assert:
    that:
      - result.changed == true
# ----------------------------------------------------------------------------
- name: Test idempotency
  devopsarr.radarr.radarr_notification:
    name: Example
    on_grab: true
    config_contract: CustomScriptSettings
    implementation: CustomScript
    fields:
      - name: path
        value: /scripts/test.sh
    radarr_api_key: "{{ radarr_api_key }}"
    radarr_url: "{{ radarr_url }}"
  register: result
- name: Assert notification idempotency
  ansible.builtin.assert:
    that:
      - result.changed == false
# ----------------------------------------------------------------------------
- name: Delete notification
  devopsarr.radarr.radarr_notification:
    name: Example
    radarr_api_key: "{{ radarr_api_key }}"
    radarr_url: "{{ radarr_url }}"
    state: absent
  register: result
- name: Assert notification deletion
  ansible.builtin.assert:
    that:
      - result['id'] == 0
# ----------------------------------------------------------------------------
- name: Create another notification with sensitive values
  devopsarr.radarr.radarr_notification:
    name: Example
    config_contract: WebhookSettings
    implementation: Webhook
    fields:
      - name: username
        value: User
      - name: password
        value: test
      - name: url
        value: webhook.lcl
      - name: method
        value: 1
    radarr_api_key: "{{ radarr_api_key }}"
    radarr_url: "{{ radarr_url }}"
  register: result
- name: Assert notification creation
  ansible.builtin.assert:
    that:
      - result['implementation'] == 'Webhook'
# ----------------------------------------------------------------------------
- name: Test idempotency
  devopsarr.radarr.radarr_notification:
    name: Example
    config_contract: WebhookSettings
    implementation: Webhook
    fields:
      - name: username
        value: User
      - name: password123
        value: test
      - name: url
        value: webhook.lcl
      - name: method
        value: 1
    radarr_api_key: "{{ radarr_api_key }}"
    radarr_url: "{{ radarr_url }}"
  register: result
- name: Assert notification idempotency
  ansible.builtin.assert:
    that:
      - result.changed == false
# ----------------------------------------------------------------------------
- name: Test key change
  devopsarr.radarr.radarr_notification:
    name: Example
    config_contract: WebhookSettings
    implementation: Webhook
    fields:
      - name: username
        value: User
      - name: password123
        value: test
      - name: url
        value: webhook.lcl
      - name: method
        value: 1
    update_secrets: true
    radarr_api_key: "{{ radarr_api_key }}"
    radarr_url: "{{ radarr_url }}"
  register: result
- name: Assert notification idempotency
  ansible.builtin.assert:
    that:
      - result.changed == true
# ----------------------------------------------------------------------------
- name: Clean up
  devopsarr.radarr.radarr_notification:
    name: Example
    state: absent
    radarr_api_key: "{{ radarr_api_key }}"
    radarr_url: "{{ radarr_url }}"
